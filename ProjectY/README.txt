Project Y - Operating Systems - Nicole Baldy, Elena Falcione, Tim Inzitari

In this project, we experimented with pthreads by completing the chainsmoker
problem, as explained below. Our code is compiled with the command
"gcc -pthread projy.c -o chainsmoker" to create a chainsmoker executable which
can be run with the command "./chainsmoker"

The program prints out a message when
 - An agent generates two ingredients (specifying which two were generated)
 - A pusher either puts its ingredient on the table or wakes a smoker
 - A smoker makes and smokes a cigarette
 - A smoker has made its 3 cigarettes and leaves

 In our program, there are 6 smokers, 2 with each ingredient, and each
 smoke 3 cigarettes before leaving.

The chainsmoker problem & implementation:
  There are three ingredients to make a cigarette - tobacco, paper, and matches
  - Smokers have one ingredient but need the two others from the agent before
    making a cigarette.
    In our implementation, they wait to be woken up by a
    pusher, then make a cigarette, wake the agent back up, and then smoke the
    cigarette.

  - Agents randomly generate two ingredients once previous ingredients are
    consumed by the smoker.
    In our implementation, the agent can only make one transaction at a time. It is
    represented by three different agent threads, each of which generates two
    ingredients. AgentSem starts as 1, so one thread executes in the beginning,
    and then no more can execute until they are awoken by a chainsmoker, indicating
    that the transaction is complete.

  - Pushers are an in-between from agents to smokers, waking up when specific
    ingredients are generated by the agent and watching for another ingredient,
    then waking up the appropriate smoker.
    In our implementation, pushers wait until they are woken up by the agent (their
    ingredient is generated) and then check if another ingredient is on the table.
    If so, they wake the appropriate smoker; else, they put their ingredient on
    the table.


